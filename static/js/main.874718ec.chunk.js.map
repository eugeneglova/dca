{"version":3,"sources":["functions.js","TableEdit.js","App.js","index.js"],"names":["getDecimals","value","absValue","Math","abs","precision","decimals","floor","getCost","p","a","getPosPrice","pp","pa","op","oa","getPositionPL","entryPrice","exitPrice","amount","fee","pl","exitFee","getPositionPLPercent","cost","positiveAmount","max","getPositionCost","getPosition","plp","id","_","uniqueId","price","getPercentPrice","percent","parseFloat","getNextPrice","xPrice","sign","index","log","log10","getNextAmount","xAmount","getLiqPrice","leverage","min_margin","getAvgPosition","orders","maxIndex","length","reduce","acc","order","isEmpty","getOrderColumns","rows","settings","name","title","getCellValue","row","indexOf","liq_price","diff","prevPrice","diffPercent","getOrderRows","entryAmount","pricePercent","xAmountAfter","endPrice","push","getOrders","orderRows","map","data","type","symbol","flags","String","meta","lev","undefined","aff_code","JSON","stringify","isPublic","throttle","payload","join","getBinanceFuturesOrders","quantity","timeInForce","side","stopPrice","workingType","positionSide","getRowId","FocusableCell","onClick","restProps","Cell","tabIndex","onFocus","TableEdit","initRows","columns","onChange","useState","setRows","editingCells","setEditingCells","useEffect","commitChanges","changedRows","added","changed","deleted","startingAddedId","deletedSet","Set","filter","has","onCommitChanges","onEditingCellsChange","addedRows","onAddedRowsChange","cellComponent","selectTextOnEditStart","showAddCommand","showDeleteCommand","App","setSettings","setOrderRows","pos","getPlRows","plRows","setPlRows","settingsColumns","parse","prompt","positions","position","status","basePrice","exitPirce","positionRows","pair","newOrderRows","all","slice","newOrderRowsSorted","orderBy","concat","exchange","console","copy","handleCopyOrders","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.874718ec.chunk.js","sourcesContent":["import _ from 'lodash'\n\nconst getDecimals = (value) => {\n  const absValue = Math.abs(value)\n  if (absValue < 0.0005) return 6\n  if (absValue < 0.005) return 5\n  if (absValue < 0.05) return 4\n  if (absValue < 0.5) return 3\n  if (absValue < 1) return 2\n  if (absValue < 1000) return 2\n  if (absValue < 10000) return 1\n  return 0\n}\n\nexport const precision = (value, decimals = getDecimals(value)) =>\n  Math.floor(value * 10 ** decimals) / 10 ** decimals\n\nconst getCost = (p, a) => p * a\nconst getPosPrice = (pp, pa, op, oa) => precision((getCost(pp, pa) + getCost(op, oa)) / (pa + oa))\n\nexport const getPositionPL = (entryPrice, exitPrice, amount, fee) => {\n  const pl = (exitPrice - entryPrice) * amount\n  const exitFee = exitPrice * Math.abs(amount) * fee\n  return precision(pl - exitFee)\n}\n\nconst getPositionCost = (entryPrice, exitPrice, amount) => {\n  const positiveAmount = Math.abs(amount)\n  if (amount < 0) {\n    return Math.max(positiveAmount * entryPrice, positiveAmount * exitPrice, 0)\n  }\n  return Math.max(positiveAmount * entryPrice, 0)\n}\n\nexport const getPositionPLPercent = (entryPrice, exitPrice, amount) => {\n  const pl = getPositionPL(entryPrice, exitPrice, amount, 0)\n  const cost = getPositionCost(entryPrice, exitPrice, amount)\n  return pl && cost !== 0 ? (pl / cost) * 100 : 0\n}\n\nexport const getPosition = (pp, pa, op, oa, fee = 0.002) => {\n  const p = getPosPrice(pp, pa, op, oa)\n  const a = precision(pa + oa)\n  const pl = getPositionPL(p, op, a, fee)\n  const plp = precision(getPositionPLPercent(p, op, a))\n  return {\n    id: _.uniqueId(),\n    price: p,\n    amount: a,\n    op,\n    oa,\n    pl,\n    plp,\n  }\n}\n\nexport const getPercentPrice = (entryPrice, percent) =>\n  precision(parseFloat(entryPrice) + parseFloat(entryPrice) * (parseFloat(percent) / 100))\nexport const getPricePercent = (price, entryPrice) =>\n  precision(((parseFloat(price) - parseFloat(entryPrice)) * 100) / parseFloat(entryPrice))\n\nconst getNextPrice = (price, xPrice, sign, index, log) => {\n  return parseFloat(log)\n    ? precision(price + sign * price * xPrice * Math.log10((index + 2) * 1.3))\n    : precision(price + sign * price * xPrice)\n    // : precision(price + sign * price * xPrice * Math.pow(index + 1, 1 / 3))\n}\nconst getNextAmount = (amount, xAmount, index) => precision(amount * xAmount)\n\nconst getLiqPrice = (price, amount, leverage, min_margin) => (\n  price * (1 + (1 / leverage - min_margin) * Math.sign(amount) * -1)\n)\n\nexport const getSettingsColumns = () => [\n  { name: 'symbol', title: 'Symbol' },\n  { name: 'entryPrice', title: 'Entry Price' },\n  { name: 'entryAmount', title: 'Entry Amount' },\n  { name: 'pricePercent', title: 'Price Percent' },\n  {\n    name: 'price',\n    title: 'Price',\n    getCellValue: (row) => getPercentPrice(row.entryPrice, row.pricePercent),\n  },\n  { name: 'xPrice', title: 'x Price' },\n  { name: 'xAmount', title: 'x Amount' },\n  { name: 'xAmountAfter', title: 'x After' },\n  { name: 'leverage', title: 'Leverage' },\n  { name: 'min_margin', title: 'Min Margin' },\n  { name: 'aff_code', title: 'Ref' },\n  { name: 'fee', title: 'Fee %' },\n  { name: 'log', title: 'Log10 or Linear' },\n]\n\nexport const getAvgPosition = (orders, maxIndex = orders.length - 1, fee) =>\n  orders.reduce((acc, order, index) => {\n    if (index > maxIndex) return acc\n    const { price, amount } = _.isEmpty(acc) ? { price: 0, amount: 0 } : acc\n    return getPosition(price, amount, parseFloat(order.op), parseFloat(order.oa), fee)\n  }, {})\n\nexport const getOrderColumns = (rows, settings) => [\n  {\n    name: 'price',\n    title: 'Pos Price',\n    getCellValue: (row) => getAvgPosition(rows, rows.indexOf(row)).price,\n  },\n  {\n    name: 'liq_price',\n    title: 'Pos Liq Price (diff)',\n    getCellValue: (row) => {\n      const { price, amount, op } = getAvgPosition(rows, rows.indexOf(row))\n      const liq_price = getLiqPrice(price, amount, settings.leverage, settings.min_margin)\n      const diff = amount > 0 ? op - liq_price : liq_price - op\n      return `${precision(liq_price)} (${precision(diff)})`\n    },\n  },\n  {\n    name: 'price diff',\n    title: 'Pos Price diff',\n    getCellValue: (row) => {\n      const prevPrice = getAvgPosition(rows, rows.indexOf(row) - 1).price\n      const diff = prevPrice - getAvgPosition(rows, rows.indexOf(row)).price\n      const diffPercent = (diff / prevPrice) * 100\n      return `${precision(diff || 0)} (${precision(diffPercent || 0, 2)}%)`\n    },\n  },\n  {\n    name: 'amount',\n    title: 'Pos Amount',\n    getCellValue: (row) => getAvgPosition(rows, rows.indexOf(row)).amount,\n  },\n  {\n    name: 'pc',\n    title: 'Pos Cost',\n    getCellValue: (row) => {\n      const { price, amount } = getAvgPosition(rows, rows.indexOf(row))\n      return precision(getCost(price, amount))\n    },\n  },\n  { name: 'op', title: 'Ord Price' },\n  {\n    name: 'oliq_price',\n    title: 'Ord Liq Price',\n    getCellValue: (row) => {\n      const { op, oa } = getAvgPosition(rows, rows.indexOf(row))\n      const liq_price = getLiqPrice(op, oa, settings.leverage, settings.min_margin)\n      return precision(liq_price)\n    },\n  },\n  {\n    name: 'opp',\n    title: 'Ord Price diff',\n    getCellValue: (row) => {\n      const { op: prevPrice } = rows[rows.indexOf(row) - 1] || {}\n      const diff = prevPrice - row.op\n      const diffPercent = (diff / prevPrice) * 100\n      return `${precision(diff || 0)} (${precision(diffPercent || 0, 2)}%)`\n    },\n  },\n  { name: 'oa', title: 'Ord Amount' },\n  { name: 'oc', title: 'Ord Cost', getCellValue: (row) => precision(getCost(row.op, row.oa)) },\n  {\n    name: 'pl',\n    title: 'P/L (%)',\n    getCellValue: (row) => {\n      const { pl, plp } = getAvgPosition(rows, rows.indexOf(row))\n      return `${precision(pl, 3)} (${precision(plp, 2)}%)`\n    },\n  },\n  {\n    name: 'pl2',\n    title: 'Fee P/L (%)',\n    getCellValue: (row) => {\n      const { pl, plp } = getAvgPosition(rows, rows.indexOf(row), (settings.fee * 2) / 100)\n      return `${precision(pl, 3)} (${precision(plp, 2)}%)`\n    },\n  },\n]\n\nexport const getOrderRows = ({\n  entryPrice = 6046.3,\n  entryAmount = 0.001,\n  pricePercent = -10,\n  xPrice = 0.009,\n  xAmount = 1.35,\n  xAmountAfter = 2,\n  log = 1,\n}) => {\n  const rows = []\n\n  let price = parseFloat(entryPrice)\n  let amount = parseFloat(entryAmount)\n  const sign = Math.sign(pricePercent)\n  const endPrice = getPercentPrice(parseFloat(entryPrice), parseFloat(pricePercent))\n  while (price * sign < sign * endPrice) {\n    rows.push({ id: _.uniqueId(), op: price, oa: amount })\n    const index = rows.length - 1\n    price = getNextPrice(price, xPrice, sign, index, log)\n    amount = index + 1 >= xAmountAfter ? getNextAmount(amount, xAmount, index) : amount\n  }\n  return rows\n}\n\nexport const getPlColumns = () => [\n  { name: 'price', title: 'Pos Price' },\n  { name: 'amount', title: 'Pos Amount' },\n  { name: 'exitPrice', title: 'Exit Price' },\n  {\n    name: 'pl',\n    title: 'P/L',\n    getCellValue: (row) => {\n      const pl = getPositionPL(row.price, row.exitPrice, row.amount, 0.002)\n      const plp = getPositionPLPercent(row.price, row.exitPrice, row.amount)\n      return `${precision(pl, 3)} (${precision(plp, 2)}%)`\n    },\n  },\n]\n\nexport const getPlRows = (orderRows) => {\n  const pos = getAvgPosition(orderRows)\n  return [\n    { id: 'exit1', price: pos.price, amount: pos.amount, exitPrice: getPercentPrice(pos.price, 1) },\n    { id: 'exit2', price: pos.price, amount: pos.amount, exitPrice: getPercentPrice(pos.price, 2) },\n    { id: 'exit3', price: pos.price, amount: pos.amount, exitPrice: getPercentPrice(pos.price, 3) },\n  ]\n}\n\nexport const getOrders = (settings, orderRows) =>\n  orderRows\n    .map(({ op: price, oa: amount }) => {\n      const data = {\n        type: 'LIMIT',\n        symbol: settings.symbol,\n        flags: 0,\n        price: String(price),\n        amount: String(amount),\n        meta: {\n          lev: settings.leverage ? settings.leverage : undefined,\n          aff_code: settings.aff_code,\n        }\n      }\n      return (\n        `__dispatch(` +\n        JSON.stringify({\n          type: 'WS_REQUEST_SEND',\n          meta: { isPublic: false, throttle: true },\n          payload: JSON.stringify([0, 'on', null, data]),\n        }) +\n        `)`\n      )\n    })\n    .join('\\n')\n\nexport const getBinanceFuturesOrders = (settings, orderRows) =>\n  orderRows\n    .map(({ op: price, oa: amount }) => {\n      const payload = {\n        symbol: settings.symbol,\n        quantity: Math.abs(amount),\n        type: 'LIMIT',\n        timeInForce: 'GTC',\n        leverage: settings.leverage,\n        side: amount > 0 ? 'BUY' : 'SELL',\n        stopPrice: null,\n        workingType: null,\n        positionSide: amount > 0 ? 'LONG' : 'SHORT',\n        price: String(price),\n      }\n      return (\n        `__NEXT_REDUX_STORE__.dispatch(` +\n        JSON.stringify({\n          type: 'futuresOrderForm/placeOrder',\n          payload,\n        }) +\n        `)`\n      )\n    })\n    .join('\\n')\n","import React, { useState, useEffect } from 'react'\nimport { EditingState } from '@devexpress/dx-react-grid'\nimport {\n  Grid,\n  Table,\n  TableHeaderRow,\n  TableEditColumn,\n  TableInlineCellEditing,\n} from '@devexpress/dx-react-grid-material-ui'\n\nconst getRowId = row => row.id\n\nconst FocusableCell = ({ onClick, ...restProps }) => (\n  <Table.Cell {...restProps} tabIndex={0} onFocus={onClick} />\n)\n\nfunction TableEdit({ rows: initRows, columns, onChange = () => {} }) {\n  const [rows, setRows] = useState(initRows)\n  const [editingCells, setEditingCells] = useState([])\n\n  useEffect(() => {\n    setRows(initRows)\n  }, [initRows])\n\n  const commitChanges = ({ added, changed, deleted }) => {\n    let changedRows\n    if (added) {\n      const startingAddedId = rows.length > 0 ? rows[rows.length - 1].id + 1 : 0\n      changedRows = [\n        ...rows,\n        ...added.map((row, index) => ({\n          id: startingAddedId + index,\n          ...row,\n        })),\n      ]\n    }\n    if (changed) {\n      changedRows = rows.map(row => (changed[row.id] ? { ...row, ...changed[row.id] } : row))\n    }\n    if (deleted) {\n      const deletedSet = new Set(deleted)\n      changedRows = rows.filter(row => !deletedSet.has(row.id))\n    }\n    setRows(changedRows)\n    onChange(changedRows)\n  }\n\n  const addEmptyRow = () => commitChanges({ added: [{}] })\n\n  return (\n    <Grid rows={rows} columns={columns} getRowId={getRowId}>\n      <EditingState\n        onCommitChanges={commitChanges}\n        editingCells={editingCells}\n        onEditingCellsChange={setEditingCells}\n        addedRows={[]}\n        onAddedRowsChange={addEmptyRow}\n      />\n      <Table cellComponent={FocusableCell} />\n      <TableHeaderRow />\n      <TableInlineCellEditing selectTextOnEditStart />\n      <TableEditColumn showAddCommand showDeleteCommand />\n    </Grid>\n  )\n}\n\nexport default TableEdit\n","import React, { useState, useEffect } from 'react'\nimport copy from 'copy-to-clipboard'\nimport _ from 'lodash'\n\nimport {\n  getSettingsColumns,\n  getOrderColumns,\n  getOrderRows,\n  getPlColumns,\n  getPlRows,\n  getOrders,\n  getBinanceFuturesOrders,\n} from './functions'\nimport TableEdit from './TableEdit'\n\nfunction App() {\n  const [settings, setSettings] = useState({\n    id: 'settings',\n    symbol: 'tBTCF0:USTF0',\n    entryPrice: 9000,\n    entryAmount: 0.005,\n    pricePercent: -10,\n    xPrice: 0.011,\n    xAmount: 2,\n    xAmountAfter: 2,\n    leverage: 30,\n    min_margin: 0.005,\n    aff_code: 'Uv2r2svs8',\n    fee: 0.075,\n    log: 1,\n  })\n  const [orderRows, setOrderRows] = useState(getOrderRows(settings))\n  const [plRows, setPlRows] = useState(getPlRows(orderRows))\n\n  useEffect(() => {\n    setOrderRows(getOrderRows(settings))\n  }, [settings])\n\n  const settingsColumns = getSettingsColumns()\n\n  const handleCopyOrders = (exchange) => {\n    const getOrdersFnMap = {\n      'bitfinex': getOrders,\n      'binancefutures': getBinanceFuturesOrders,\n    }\n    const orders = getOrdersFnMap[exchange](settings, orderRows)\n    console.log(orders)\n    copy(orders)\n  }\n\n  return (\n    <div>\n      <center>\n        <h3>Settings</h3>\n      </center>\n      <TableEdit\n        rows={[settings]}\n        columns={settingsColumns}\n        onChange={rows => setSettings(rows[0])}\n      />\n      <center>\n        <h3>Positions / Orders</h3>\n      </center>\n      <button onClick={() => setOrderRows([])}>Clear positions / orders</button>\n      <button\n        onClick={() => {\n          const data = JSON.parse(prompt('copy(__state().data)'))\n          if (!data) return\n          const plRows = _.filter(\n            data.positions,\n            position => position.status === 'ACTIVE',\n          ).map(({ id, basePrice, amount }) => ({ id, price: basePrice, amount, exitPirce: basePrice }))\n          setPlRows(plRows)\n          const positionRows = _.filter(\n            data.positions,\n            position => position.pair === settings.symbol && position.status === 'ACTIVE',\n          ).map(({ id, basePrice, amount }) => ({ id, op: basePrice, oa: amount }))\n          const newOrderRows = _.filter(\n            data.orders.all,\n            order =>\n              order.symbol === settings.symbol.slice(1) &&\n              order.status === 'ACTIVE' &&\n              order.type === 'LIMIT' &&\n              Math.sign(order.amount) === Math.sign(settings.entryAmount),\n          ).map(({ id, price, amount }) => ({ id, op: price, oa: amount }))\n          const newOrderRowsSorted = _.orderBy(\n            newOrderRows,\n            ['op'],\n            [Math.sign(settings.entryAmount) < 0 ? 'asc' : 'desc'],\n          )\n          setOrderRows(positionRows.concat(newOrderRowsSorted))\n        }}\n      >\n        Import Data\n      </button>\n      <button onClick={() => handleCopyOrders('bitfinex')}>Copy Bitfinex orders</button>\n      {/* <button onClick={() => handleCopyOrders('binancefutures')}>Copy Binance Futures orders</button> */}\n      <TableEdit rows={orderRows} columns={getOrderColumns(orderRows, settings)} onChange={setOrderRows} />\n      <center>\n        <h3>Profit / Loss</h3>\n      </center>\n      <TableEdit rows={plRows} columns={getPlColumns()} onChange={setPlRows} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}